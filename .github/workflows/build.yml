name: Build Wine

on:
  pull_request:
  push:
  workflow_dispatch:

env: 
  CC: clang
  CXX: clang++
  CPATH: /usr/local/include
  LIBRARY_PATH: /usr/local/lib
  CFLAGS: -O3
  CROSSCFLAGS: -O3 -Wno-error=incompatible-pointer-types -Wno-error=int-conversion
  LDFLAGS: -Wl,-ld_classic -Wl,-headerpad_max_install_names -Wl,-rpath,@loader_path/../../ -Wl,-rpath,/usr/local/lib'
  MACOSX_DEPLOYMENT_TARGET: 10.14
  WINE_CONFIGURE: $GITHUB_WORKSPACE/configure
  BUILDROOT: $GITHUB_WORKSPACE/build
  WINE_INSTALLROOT: $GITHUB_WORKSPACE/install
  WINE_MONO: https://github.com/madewokherd/wine-mono/releases/download/wine-mono-9.3.0/wine-mono-9.3.0-x86.tar.xz
jobs:
  build:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4


      - name: Install Homebrew Packages
        continue-on-error: true
        run: |
          REQUIRED_PACKAGES=(
              # Build Dependencies
              "bison"
              "mingw-w64"
              "pkg-config"
              "coreutils"
              "gcenx/wine/cx-llvm"
              # Dependencies
              "freetype"
              "gettext"
              "gnutls"
              "gstreamer"
              "sdl2"
              "molten-vk"
            )
          brew update
          brew install "${REQUIRED_PACKAGES[@]}"
          

      - name: Echo Libs [DEBUG]
        run: |
          echo "Brew Libs"
          ls $(brew --prefix)/lib

          echo "FFmpeg Libs" 
          ls $(brew --prefix ffmpeg@7)/lib

          echo "GStreamer Libs"
          ls $(brew --prefix gstreamer)/lib/gstreamer-1.0

      - name: Add bison & cx-llvm to $PATH
        run: |
          echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
          echo "$(brew --prefix cx-llvm)/bin" >> $GITHUB_PATH

      - name: Configure wine64
        run: |
          set -x
          
          mkdir -p ${{ env.BUILDROOT }}/wine64
          pushd ${{ env.BUILDROOT }}/wine64
          ${{ env.WINE_CONFIGURE }} \
            --disable-option-checking \
            --disable-tests \
            --enable-archs=i386,x86_64 \
            --without-alsa \
            --without-capi \
            --with-coreaudio \
            --with-cups \
            --without-dbus \
            --without-fontconfig \
            --with-freetype \
            --with-gettext \
            --without-gettextpo \
            --without-gphoto \
            --with-gnutls \
            --without-gssapi \
            --with-gstreamer \
            --without-inotify \
            --without-krb5 \
            --with-mingw \
            --without-netapi \
            --with-opencl \
            --with-opengl \
            --without-oss \
            --with-pcap \
            --with-pcsclite \
            --with-pthread \
            --without-pulse \
            --without-sane \
            --with-sdl \
            --without-udev \
            --with-unwind \
            --without-usb \
            --without-v4l2 \
            --with-vulkan \
            --without-wayland \
            --without-x
          popd

      - name: Build wine64
        run: |
          pushd ${{ env.BUILDROOT }}/wine64
          make -j$(sysctl -n hw.ncpu 2>/dev/null)
          popd
      - name: Install wine64
        run: |
          pushd ${{ env.BUILDROOT }}/wine64
          make install-lib DESTDIR="$GITHUB_WORKSPACE/${{ env.WINE_INSTALLROOT }}"
          popd
      - name: Create Final Package
        run: |
          mkdir -p Libraries/DXVK
          mkdir -p Libraries/Wine

          cp -a ${{ env.WINE_INSTALLROOT }}/. Libraries/Wine/
          rm -rf Libraries/Wine/share/man

      - name: Copy External Libs
        run: |
          chmod +x .github/dylib_packer.zsh
          .github/dylib_packer.zsh
          
      - name: Install WineMono
        run: |
          mkdir Libraries/Wine/share/wine/mono

          curl -L -o mono.tar.xz ${{ env.WINE_MONO }}
          tar -xzf mono.tar.xz -C Libraries/Wine/share/wine/mono
          
      - name: Tar Libraries
        if: success()
        run: |
          tar -zcf Libraries.tar.gz Libraries          

      - name: Upload Libraries
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: Libraries
          path: Libraries.tar.gz          
